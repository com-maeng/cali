services:
  was:
    build:
      context: ./cali_backend
      dockerfile: Dockerfile
    volumes:
      - "./cali_backend:/cali:ro"
    ports:
      - "127.0.0.1:8000:8000"
    env_file: ".env.dev"
    environment:
      - DEBUG=1
      - DJANGO_SETTINGS_MODULE=cali_backend.settings # manage.py에서 setdefault 메서드 호출해도 환경변수 설정이 안 됨
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
      search-server-m:
        condition: service_healthy

  db:
    image: postgres:16-alpine3.20 # Latest minor version
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    healthcheck:
      test: "pg_isready --username=${DATABASE_USER} --dbname=${DATABASE_NAME}"
      interval: 2s
      retries: 4
      start_period: 2s
      timeout: 4s
    volumes:
      - "cali-db-data:/var/lib/postgresql/data"

  cache:
    image: redis:7.2-alpine3.20
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 2s
      retries: 4
      start_period: 2s
      timeout: 4s
    volumes:
      - cali-cache-data:/data

  search-server-m:
    image: getmeili/meilisearch
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7700/health"]
      interval: 2s
      retries: 4
      start_period: 2s
      timeout: 4s
    volumes:
      - "cali-meili-data:/meili_data"
    environment:
      - MEILI_DB_PATH=/meili_data/ms_db
      - MEILI_HTTP_ADDR=0.0.0.0:7700
      - MEILI_MASTER_KEY=${MEILI_MASTER_KEY}

volumes:
  cali-db-data:
  cali-cache-data:
  cali-meili-data:

# networks: # 지금은 불필요할 듯
#   cali-network:
