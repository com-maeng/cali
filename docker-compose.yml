services:
  web:
    build:
      context: ./web
      dockerfile: Dockerfile.dev
    volumes:
      - ./web/public:/cali/web/public
      - ./web/src:/cali/web/src
      - ./web/eslint.config.mjs:/cali/web/eslint.config.mjs
      - ./web/next.config.ts:/cali/web/next.config.ts
      - ./web/postcss.config.mjs:/cali/web/postcss.config.mjs
      - ./web/tailwind.config.ts:/cali/web/tailwind.config.ts
      - ./web/tsconfig.json:/cali/web/tsconfig.json
    ports:
      - "3000:3000"
    command: ["npm", "run", "dev"]
  db:
    image: postgres:16-alpine3.20 # Latest minor version
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    healthcheck:
      test: "pg_isready --username=${DATABASE_USER} --dbname=${DATABASE_NAME}"
      interval: 2s
      retries: 4
      start_period: 2s
      timeout: 4s
    volumes:
      - "cali-db-data:/var/lib/postgresql/data"
  search-engine:
    image: getmeili/meilisearch
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7700/health"]
      interval: 2s
      retries: 4
      start_period: 2s
      timeout: 4s
    ports:
      - 7700:7700 # To connect from local machine
    volumes:
      - ./search_engine:/cali/search_engine
    command: "sh /cali/search_engine/run_dev.sh"
volumes:
  cali-db-data:
